{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","message","likes","className","s","item","src","alt","maxLength10","maxLengthCreator","PostFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","name","placeholder","component","TextArea","validate","requiredField","MyPosts","postsData","addPosts","postsElements","map","post","likesCount","postsBlock","formData","text","posts","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","target","value","ProfileInfo","profile","descriptionBlock","photos","large","photo","fullName","aboutMe","contacts","facebook","instagram","twitter","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfileThunc","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.443e251e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n                if (!this.props.isAuth) {\r\n                    return <Redirect to='/login' />\r\n                }\r\n                return <Component {...this.props} />\r\n            }\r\n    }\r\n\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3LB6v\",\"posts\":\"MyPosts_posts__2QWVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__16nkm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1QwQ_\",\"photo\":\"ProfileInfo_photo__1lWdO\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({message, likes}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src=\"https://vokrug-tv.ru/pic/person/2/b/f/4/2bf448098b7badf3b37e87c510da29bc.jpeg\" alt=\"\"/>\r\n                {message}\r\n                <div>\r\n                    <span>likes - {likes}</span>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/DormControls/FormControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostsForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name={'text'}\r\n          placeholder={'text'}\r\n          component={TextArea}\r\n          validate={[requiredField, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostFormRedux = reduxForm({\r\n  form: 'addPost',\r\n})(AddPostsForm);\r\n\r\nconst MyPosts = ({ postsData, addPosts }) => {\r\n  let postsElements = postsData.map((post) => (\r\n    <Post message={post.message} likes={post.likesCount} />\r\n  ));\r\n\r\n  const onSubmit = (formData) => {\r\n    addPosts(formData.text);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <PostFormRedux onSubmit={onSubmit} />\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPosts: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport const ProfileStatus = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  const activateMode = () => setEditMode(true);\r\n  const deactivateMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateMode}>\r\n            {props.status || '----------'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { ProfileStatus } from './ProfileStatus';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://images.ctfassets.net/hrltx12pl8hq/6bi6wKIM5DDM5U1PtGVFcP/1c7fce6de33bb6575548a646ff9b03aa/nature-photography-pictures.jpg?fit=fill&w=800&h=300\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        {profile.photos.large ? (\r\n          <div className={s.photo}>\r\n            <img src={profile.photos.large} alt=\"\" />\r\n          </div>\r\n        ) : (\r\n          <div className={s.photo}>\r\n            <img src=\"https://prvera.ru/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png\" />\r\n          </div>\r\n        )}\r\n        <ProfileStatus status={status} updateStatus={updateStatus} />\r\n        <div>Name: {profile.fullName}</div>\r\n        <div>About me: {profile.aboutMe}</div>\r\n        <div>\r\n          Contacts:\r\n          <div>Facebook: {profile.contacts.facebook}</div>\r\n          <div>Instagram: {profile.contacts.instagram}</div>\r\n          <div>twitter: {profile.contacts.twitter}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <div> \r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUserProfileThunc,\r\n  getStatus,\r\n  updateStatus,\r\n} from '../../redux/profileReducer';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfileThunc(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfileThunc,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withAuthRedirect,\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}